{"version":3,"file":"static/js/475.8218a562.chunk.js","mappings":"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","sources":["components/info/auroras/SouthernHemisphere.js","components/info/auroras/NorthernHemisphere.js","components/info/auroras/AuroraForecast.js","components/info/auroras/KPIndex.js","components/info/Auroras.js","components/VideoPlayer.js"],"sourcesContent":["import { Card, CardHeader, CardBody, CardFooter, Col } from 'reactstrap'\r\nimport VideoPlayer from '../../VideoPlayer'\r\nconst SouthernHemisphere = () => {\r\n    const today = new Date(Date.now())\r\n    const year = today.getFullYear()\r\n    var month = today.getMonth() + 1\r\n    month = month === 13 ? 1 : month\r\n    month = month.toString().length == 1 ? \"0\" + month.toString() : month.toString()\r\n    //const day = today.getDay().toString().length == 1 ? \"0\" + today.getDay().toString() : today.getDay().toString()\r\n    const day = \"03\"\r\n    const src = \"https://data.consumer-digital.api.metoffice.gov.uk/models/ovation/forecast/issued/videos/aurora_map_FORECAST_S_\" + year + \"-\" + month + \"-\" + day + \"_0600.mp4\"\r\n    const title = \"Southern Hemisphere Aurora Forecast\"\r\n    return (\r\n        <VideoPlayer src={src} title={title} />\r\n    )\r\n}\r\nexport default SouthernHemisphere;\r\n","import { Card, CardHeader, CardBody, CardFooter, Col } from 'reactstrap'\r\nimport VideoPlayer from '../../VideoPlayer'\r\nconst NorthernHemisphere = () => {\r\n    const today = new Date(Date.now())\r\n    const year = today.getFullYear()\r\n    var month = today.getMonth() + 1\r\n    month = month === 13 ? 1 : month\r\n    month = month.toString().length == 1 ? \"0\" + month.toString() : month.toString()\r\n    //const day = today.getDay().toString().length == 1 ? \"0\" + today.getDay().toString() : today.getDay().toString()\r\n    const day = \"03\"\r\n    const src = \"https://data.consumer-digital.api.metoffice.gov.uk/models/ovation/forecast/issued/videos/aurora_map_FORECAST_N_\" + year + \"-\" + month + \"-\" + day + \"_0600.mp4\"\r\n    const title = \"Northern Hemisphere Aurora Forecast\"\r\n    return (\r\n        <VideoPlayer src={src} title={title} />\r\n    )\r\n}\r\nexport default NorthernHemisphere;\r\n","import { Card, CardHeader, CardBody, CardFooter, Col } from 'reactstrap'\r\nimport VideoPlayer from '../../VideoPlayer'\r\nconst AuroraForecast = () => {\r\n    const src=\"https://spaceweather.gfz.de/fileadmin/Aurora-Forecast/aurora_forecast_browser.webm\"\r\n    const title = \"Aurora Forecast\"\r\n    return (\r\n        <VideoPlayer src={src} title={title} />\r\n    )\r\n}\r\nexport default AuroraForecast;\r\n","import { useState, useEffect } from 'react'\r\nimport { Card, CardHeader, CardBody, CardFooter, Col, Button } from 'reactstrap'\r\nimport Highcharts from 'highcharts'\r\nimport HighchartsReact from 'highcharts-react-official'\r\nimport Reference from '../../Reference'\r\n\r\nconst KPIndex = () => {\r\n  const src = \"https://services.swpc.noaa.gov/products/noaa-planetary-k-index.json\"\r\n  const title = \"KP Index for the last 7 days\"\r\n  const defaultChart = {\r\n    chart: {\r\n      type: \"column\"\r\n    },\r\n    title: {\r\n      text: title\r\n    },\r\n    series: [\r\n      {\r\n        type: \"column\",\r\n        data: [],\r\n        zones: []\r\n      }\r\n    ],\r\n    xAxis: {\r\n      categories: []\r\n    }\r\n  };\r\n\r\n  const [chartOptions, setChartOptions] = useState({defaultChart});\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  // Data raw format is an array of records with the header: [\"time_tag\",\"Kp\",\"a_running\",\"station_count\"]\r\n  const processData = (data) => {\r\n    var categories = []\r\n    var ydata = []\r\n    for (let i = 1; i < data.length; i++) {\r\n        categories.push(data[i][0].substring(0, 13))\r\n        ydata.push(Number(data[i][1]))\r\n    }\r\n    const rtn = {chart: { type:\"column\"}, title: { text: title }, series: [{name: 'KP Index', data: ydata, zones: [{ value: 5, color: '#92D050' }, { value: 6, color: '#F6EB14' },{ value: 7, color: '#FFC800' },{ value: 8, color: '#FF9600' },{ value: 9, color: '#FF0000' },{ value: 10, color: '#C80000' },{ color: '#92D050' }]}], xAxis: { categories: categories,  labels: {enabled: true,}, dataLabels: {enabled: true,}} }\r\n    return rtn \r\n  }\r\n\r\n  useEffect(() => {\r\n    fetch(src)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        setChartOptions(processData(data));\r\n        setIsLoading(false);\r\n      });\r\n  }, []);\r\n    return (      \r\n      <Card>\r\n        <CardHeader>\r\n          <h3>{title}</h3>\r\n            <Reference title={title}/>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <table className=\"scales_table\">\r\n\r\n          <tbody><tr>\r\n          <th className=\"noaa_scale_bg_0\">Kp &lt; 5</th>\r\n          <th className=\"noaa_scale_bg_1\">Kp = 5 (G1)</th>       \r\n          <th className=\"noaa_scale_bg_2\">Kp = 6 (G2)</th>\r\n          <th className=\"noaa_scale_bg_3\">Kp = 7 (G3)</th>\r\n          <th className=\"noaa_scale_bg_4\">Kp = 8, 9- (G4)</th>\r\n          <th className=\"noaa_scale_bg_5\">Kp = 9o (G5)</th>\r\n          </tr>\r\n          </tbody>\r\n          </table>\r\n          {isLoading ? <p>Loading data...</p> :\r\n          <HighchartsReact\r\n            highcharts={Highcharts}\r\n            options={chartOptions}\r\n          />\r\n            }\r\n        </CardBody>\r\n        <CardFooter></CardFooter>\r\n      </Card>\r\n    )\r\n}\r\nexport default KPIndex;\r\n\r\n","import { Container, Row } from 'reactstrap'\r\n\r\nimport SouthernHemisphere from './auroras/SouthernHemisphere'\r\nimport NorthernHemisphere from './auroras/NorthernHemisphere'\r\nimport AuroraForecast from './auroras/AuroraForecast'\r\nimport KPIndex from './auroras/KPIndex'\r\n\r\nconst Auroras = () => {\r\n    return (\r\n        <>\r\n            <div className=\"text-center\">\r\n                <Container>\r\n                    <Row xs=\"1\" sm=\"2\">\r\n                        <NorthernHemisphere />\r\n                        <SouthernHemisphere />\r\n                    </Row>\r\n                    <Row>\r\n                        <AuroraForecast />\r\n                    </Row>\r\n                    <Row>\r\n                        <KPIndex />\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default Auroras;\r\n","import {Col, Card, CardHeader, CardBody, CardFooter} from 'reactstrap'\r\nimport Reference from './Reference'\r\n\r\nexport default function VideoPlayer({src, title}) {\r\n  return (\r\n    <Col>\r\n        <Card>\r\n            <CardHeader>\r\n                <h3>{title}</h3>\r\n                <Reference title={title}/>\r\n            </CardHeader>\r\n            <CardBody>\r\n                <video\r\n                    controls\r\n                    // ref={videoRef}\r\n                    src={src}\r\n                    style={{ width: \"100%\" }}\r\n                />                     \r\n            </CardBody>\r\n            <CardFooter>Use the square icon on the video for full screen</CardFooter>\r\n        </Card>\r\n    </Col>\r\n  );\r\n}"],"names":["SouthernHemisphere","today","Date","now","year","getFullYear","month","getMonth","src","toString","length","_jsx","VideoPlayer","title","NorthernHemisphere","AuroraForecast","KPIndex","defaultChart","chart","type","text","series","data","zones","xAxis","categories","chartOptions","setChartOptions","useState","isLoading","setIsLoading","useEffect","fetch","then","response","json","ydata","i","push","substring","Number","name","value","color","labels","enabled","dataLabels","processData","_jsxs","Card","children","CardHeader","Reference","CardBody","className","HighchartsReact","highcharts","Highcharts","options","CardFooter","Auroras","_Fragment","Container","Row","xs","sm","_ref","Col","controls","style","width"],"sourceRoot":""}